replicaCount: 1

image:
  repository: dievri/inferno-os
  pullPolicy: Always
  tag: "focal"

serviceAccount:
  create: false

securityContext: {}

registryExternalPort: &registryExternalPort 30100
registryInternalPort: &registryInternalPort 6675

userFsExternaPort: &userFsExternalPort 30101

service:
  - type: ClusterIP
    port: *registryInternalPort
  - type: ClusterIP
    port: *userFsExternalPort


nodePortRange:
  from: *registryExternalPort
  to: 30200
  proto: tcp


ingress:
  enabled: false

resources: {}
autoscaling:
  enabled: false

env:
  - name: REGISTRY_INTERNAL_PORT
    value: *registryInternalPort
  - name: REGISTRY_EXTERNAL_PORT
    value: *registryExternalPort
  - name: NINE_MINE_USER_FS_EXTERNAL_PORT
    value: *userFsExternalPort
  - name: CPU_HOST
    value: puff.a-b.xyz
  - name: CPU_USER
    value: glenda
  - name: GRIDFILES
    value: tcp!files.demo.metacoma.io!30098
  - name: CPU_PASSWORD
    value: supersecureX

files: 
  newns_9front:
    path: /usr/inferno-os/9mine/newuser_9front.sh
    data: | 
      #!/bin/bash
      export USERNAME=$1
      export USER_DOMAIN=${USERNAME}.users.demo.metacoma.io
      echo $CPU_PASSWORD | drawterm -G -h $CPU_HOST -a $CPU_HOST -u $CPU_USER -c "9fs $GRIDFILES /n/gridfiles; auth/newns -n /n/gridfiles/9mine/files/9front/9mine.ns rc /n/gridfiles/9mine/files/9front/newuser.rc $USERNAME &" &
      
  newns:
    path: /usr/inferno-os/9mine/newuser.sh
    data: |
      #!/bin/bash
      set -ex
      
      export USERNAME=$1
      export USER_ROOT=/9mine/${USERNAME}
      export USER_DOMAIN=${USERNAME}.users.demo.metacoma.io
      export INFERNO_ROOT="/usr/inferno-os"
      #export INFERNO_ROOT="/home/bebebeko/inferno-os"
      
      # XXX use tar for that
      mkdir -p ${USER_ROOT}
      cd ${USER_ROOT}
      mkdir -p net dev prog chan fd env mnt
      cp -r ${INFERNO_ROOT}/lib ${INFERNO_ROOT}/dis .
      
      DEFAULT_TCP_PORT=30103
      # lol
      TCP_PORT=`netstat -nlp | awk '/:30[12].. / {print $4}' | sort -r | awk -F: '{print $NF+1; exit}'`
      export PORT=${TCP_PORT:-$DEFAULT_TCP_PORT}
      
      cat<<'EOF' > $USER_ROOT/lib/sh/profile
      ndb/cs
      load file2chan
      load std
      mkdir -p /mnt/registry
      mount -A tcp!registry.demo.metacoma.io!30100 /mnt/registry
      #for host_var in `{ os env | sed 's/=/=''/;s/$/''/' } { '{'$host_var'}' }
      for host_var in `{ os env }  { '{'$host_var'}' }

      gridfiles = `{ndb/regquery -n type files} 
      test -d /9mine || mkdir /9mine
      mount -A $gridfiles /9mine

      
      CMD_CHAN_DIR = /tmp/file2chan
      test -d $CMD_CHAN_DIR || mkdir -p $CMD_CHAN_DIR
      output_file := /tmp/output_file
      # add cmdchan
      file2chan $CMD_CHAN_DIR^/cmd {
            if {~ ${rget offset} 0} {
              cat $output_file | putrdata
              rm $output_file
            } {
              rread ''
            }
          } {
            sh -n -c ${rget data} >$output_file >>[2]$output_file
          }
      
      echo $USERNAME^'.users.demo.metacoma.io' > /dev/sysname
      echo ok
      grid/reglisten -A -r user $USERNAME 'tcp!*!'^$PORT { export / & }
      EOF
      #chmod +x $USER_ROOT/lib/sh/profile
      
      /usr/bin/emu-g -r $USER_ROOT < /dev/null > /dev/null &


  profile:  
    path: /usr/inferno-os/lib/sh/profile
    data: |
      load file2chan
      load std
      ndb/cs
      for host_var in `{ os env } { '{'$host_var'}' }
      MOUNT_POINT = /mnt/registry
      test -d $MOUNT_POINT || mkdir -p $MOUNT_POINT
      mount { ndb/registry } $MOUNT_POINT
      port = $REGISTRY_INTERNAL_PORT
      external_port = $REGISTRY_EXTERNAL_PORT
      echo 'Internal registry port '^$port
      echo 'External registry port '^$external_port
      listen -A 'tcp!*!'$port { export $MOUNT_POINT & } &
      listen -A 'tcp!*!'$external_port { export $MOUNT_POINT & } &

      CMD_CHAN_DIR = /tmp/userfs/
      test -d $CMD_CHAN_DIR || mkdir -p $CMD_CHAN_DIR
      output_file := /tmp/output_file
      port = $NINE_MINE_USER_FS_EXTERNAL_PORT
    
      file2chan $CMD_CHAN_DIR^/user {
            if {~ ${rget offset} 0} {
              cat $output_file | putrdata
              rm $output_file
            } {
              rread ''
            }
          } {
            os /bin/sh /usr/inferno-os/9mine/newuser.sh ${rget data} >$output_file >>[2]$output_file
        	}

      output_file := /tmp/output_9front_file
      file2chan $CMD_CHAN_DIR^/9front {
            if {~ ${rget offset} 0} {
              cat $output_file | putrdata
              rm $output_file
            } {
              rread ''
            }
          } {
            os /bin/sh /usr/inferno-os/9mine/newuser_9front.sh test3334 >$output_file >>[2]$output_file
            #os /bin/sh /usr/inferno-os/9mine/newuser_9front.sh ${rget data} >$output_file >>[2]$output_file
        	}

      # https://github.com/9mine/inferno-os/blob/129109066c4092c617ce34229ba5ef91cbc19961/appl/grid/reglisten.b#L163
      echo 'user.demo.metacoma.io' > /dev/sysname
      grid/reglisten -A -r description 'user management' 'tcp!*!'^$port { export $CMD_CHAN_DIR & }
